<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="GitHub Deployment Monitoring Dashboard for Microsoft 365 Applications" />
    <meta name="theme-color" content="#6264a7" />

    <title>MyM365Agent2 - Deployment Dashboard</title>
    <base href="/" />

    <!-- Bootstrap 5 for responsive components -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />

    <!-- Office Fabric UI (for Teams integration) -->
    <link href="https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css" rel="stylesheet" />

    <!-- Custom enhanced styles -->
    <link href="css/site.css" rel="stylesheet" />
    <link href="MyM365Agent2.styles.css" rel="stylesheet" />

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <style>
        /* Critical CSS for initial render */
        body {
            font-family: 'Segoe UI', system-ui, -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
            background: linear-gradient(135deg, #faf9f8 0%, #f3f2f1 100%);
            margin: 0;
            padding: 0;
        }

        .loading-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #6264a7, #4a4c87);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            transition: opacity 0.5s ease-out;
        }

        .loading-spinner {
            width: 3rem;
            height: 3rem;
            border: 0.375rem solid rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            border-top-color: #ffffff;
        }

        .loading-text {
            color: white;
            margin-top: 1rem;
            font-weight: 500;
        }

        /* Hide loading screen when app is ready */
        .app-ready .loading-screen {
            opacity: 0;
            pointer-events: none;
        }

        /* Enhanced error UI styling */
        #blazor-error-ui {
            background: linear-gradient(135deg, #d13438, #a82226);
            color: white;
            border-radius: 8px 8px 0 0;
            box-shadow: 0 -4px 16px rgba(0, 0, 0, 0.3);
            padding: 1rem;
            display: none;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 1000;
        }

            #blazor-error-ui .btn-link {
                color: rgba(255, 255, 255, 0.8);
                text-decoration: none;
                border: none;
                background: none;
                padding: 0;
                margin-left: auto;
            }

                #blazor-error-ui .btn-link:hover {
                    color: white;
                }
    </style>
</head>
<body>
    <!-- Loading Screen -->
    <div class="loading-screen" id="loadingScreen">
        <div class="loading-spinner"></div>
        <div class="loading-text">Loading Dashboard...</div>
    </div>

    <!-- Main App Content -->
    <div id="app">
        <HeadOutlet />
        <Routes @rendermode="@RenderMode.InteractiveServer" />

        <!-- Error boundary for better UX -->
        <div id="blazor-error-ui">
            <div class="d-flex align-items-center">
                <i class="oi oi-warning me-2"></i>
                <span>An unexpected error has occurred.</span>
                <button class="btn btn-link btn-sm ms-auto dismiss">
                    <i class="oi oi-x"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Scripts loaded at the end for better performance -->
    <!-- Bootstrap 5 JavaScript Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>

    <!-- Blazor Framework -->
    <script src="_framework/blazor.web.js"></script>

    <!-- Fluent UI Web Components (correct import) -->
    <script type="module" src="https://unpkg.com/@@fluentui/web-components"></script>

    <!-- Chart.js for data visualization -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.min.js"></script>

    <!-- Custom chart helpers -->
    <script src="~/js/charts.js"></script>

    <!-- App initialization script -->
    <script>
        // Hide loading screen when Blazor is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Show app content after a brief delay
            setTimeout(function() {
                document.body.classList.add('app-ready');

                // Remove loading screen after animation
                setTimeout(function() {
                    const loadingScreen = document.getElementById('loadingScreen');
                    if (loadingScreen) {
                        loadingScreen.remove();
                    }
                }, 500);
            }, 1000);
        });

        // Enhanced error handling
        window.addEventListener('unhandledrejection', function (event) {
            console.error('Unhandled promise rejection:', event.reason);

            // Show user-friendly error message
            const errorUI = document.getElementById('blazor-error-ui');
            if (errorUI) {
                errorUI.style.display = 'block';
            }
        });

        // Error UI dismiss functionality
        document.addEventListener('click', function(e) {
            if (e.target.closest('.dismiss')) {
                const errorUI = document.getElementById('blazor-error-ui');
                if (errorUI) {
                    errorUI.style.display = 'none';
                }
            }
        });

        // Add smooth scrolling behavior
        document.documentElement.style.scrollBehavior = 'smooth';

        // Enhanced accessibility - keyboard navigation
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Tab') {
                document.body.classList.add('keyboard-navigation');
            }
        });

        document.addEventListener('mousedown', function() {
            document.body.classList.remove('keyboard-navigation');
        });

        // Performance monitoring
        window.addEventListener('load', function() {
            if (window.performance && window.performance.timing) {
                const loadTime = window.performance.timing.loadEventEnd - window.performance.timing.navigationStart;
                console.log('Page load time:', loadTime + 'ms');

                if (loadTime > 3000) {
                    console.warn('Slow page load detected:', loadTime + 'ms');
                }
            }
        });
    </script>

    <!-- Additional CSS for enhanced accessibility -->
    <style>
        .keyboard-navigation *:focus {
            outline: 2px solid #6264a7 !important;
            outline-offset: 2px;
        }

        .btn {
            border-width: 2px;
        }

        }</style>
</body>
</html>