@page "/deployments/{Repository}/{DeploymentId}"
@using MyM365Agent2.Common.Models
@using MyM365Agent2.Services
@using System.Text.Json
@inject IAzureTableStorageService StorageService
@inject NavigationManager Navigation

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <button class="btn btn-link p-0" @onclick='() => Navigation.NavigateTo("/")'>
                            <i class="oi oi-home"></i> Home
                        </button>
                    </li>
                    <li class="breadcrumb-item">
                        <button class="btn btn-link p-0" @onclick='() => Navigation.NavigateTo("/deployments")'>
                            Deployments
                        </button>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@Repository</li>
                </ol>
            </nav>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="row">
            <div class="col-12 text-center py-5">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading deployment details...</span>
                </div>
                <p class="mt-3 text-muted">Loading deployment information...</p>
            </div>
        </div>
    }
    else if (deployment == null)
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-warning">
                    <i class="oi oi-warning me-2"></i>
                    <strong>Deployment not found.</strong>
                    <p class="mb-0 mt-2">The deployment you're looking for doesn't exist or may have been removed.</p>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Header Card -->
        <div class="row">
            <div class="col-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="mb-1">
                                    <i class="oi oi-code me-2"></i>
                                    @deployment.Repository
                                </h4>
                                <p class="mb-0 text-muted">@deployment.WorkflowDisplayName</p>
                            </div>
                            <div class="text-end">
                                <span class="badge @GetStateClass(deployment.StatusCategory) fs-6">
                                    <i class="oi oi-@GetStateIcon(deployment.StatusCategory) me-1"></i>
                                    @deployment.DisplayStatus
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="row">
                                    <div class="col-sm-6 mb-3">
                                        <strong>Environment:</strong>
                                        <span class="badge bg-info ms-2">@deployment.Environment</span>
                                    </div>
                                    <div class="col-sm-6 mb-3">
                                        <strong>Branch/Ref:</strong>
                                        <span class="ms-2">
                                            <i class="oi oi-fork me-1"></i>
                                            @deployment.Branch
                                        </span>
                                    </div>
                                    <div class="col-sm-6 mb-3">
                                        <strong>Triggered By:</strong>
                                        <span class="ms-2">
                                            <i class="oi oi-person me-1"></i>
                                            @deployment.CreatorLogin
                                        </span>
                                    </div>
                                    <div class="col-sm-6 mb-3">
                                        <strong>Trigger Event:</strong>
                                        <span class="badge bg-secondary ms-2">@deployment.TriggerType</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="text-md-end">
                                    @if (!string.IsNullOrEmpty(deployment.WorkflowRunUrl))
                                    {
                                        <a href="@deployment.WorkflowRunUrl" target="_blank" class="btn btn-primary me-2 mb-2">
                                            <i class="oi oi-external-link me-1"></i>
                                            View Run
                                        </a>
                                    }
                                    @if (!string.IsNullOrEmpty(deployment.workflowUrl))
                                    {
                                        <a href="@deployment.workflowUrl" target="_blank" class="btn btn-outline-primary mb-2">
                                            <i class="oi oi-code me-1"></i>
                                            Workflow File
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="row">
            <!-- Left Column - Details -->
            <div class="col-lg-8">
                <!-- Deployment Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="oi oi-info me-2"></i>
                            Deployment Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <dl class="row">
                                    <dt class="col-sm-5">Repository:</dt>
                                    <dd class="col-sm-7">@deployment.Repository</dd>

                                    <dt class="col-sm-5">Environment:</dt>
                                    <dd class="col-sm-7">
                                        <span class="badge bg-info">@deployment.Environment</span>
                                    </dd>

                                    <dt class="col-sm-5">Status:</dt>
                                    <dd class="col-sm-7">
                                        <span class="badge @GetStateClass(deployment.StatusCategory)">@deployment.DisplayStatus</span>
                                    </dd>

                                    <dt class="col-sm-5">Workflow:</dt>
                                    <dd class="col-sm-7">@deployment.WorkflowDisplayName</dd>

                                    @if (!string.IsNullOrEmpty(deployment.RunNumberDisplay) && deployment.RunNumberDisplay != "N/A")
                                    {
                                        <dt class="col-sm-5">Run Number:</dt>
                                        <dd class="col-sm-7">#@deployment.RunNumberDisplay</dd>
                                    }

                                    @if (!string.IsNullOrEmpty(deployment.DeploymentIdDisplay) && deployment.DeploymentIdDisplay != "N/A")
                                    {
                                        <dt class="col-sm-5">Deployment ID:</dt>
                                        <dd class="col-sm-7">@deployment.DeploymentIdDisplay</dd>
                                    }
                                </dl>
                            </div>
                            <div class="col-md-6">
                                <dl class="row">
                                    <dt class="col-sm-5">Created:</dt>
                                    <dd class="col-sm-7">@deployment.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</dd>

                                    <dt class="col-sm-5">Last Updated:</dt>
                                    <dd class="col-sm-7">@deployment.UpdatedAt.ToString("yyyy-MM-dd HH:mm:ss")</dd>

                                    @if (deployment.runStartedAt.HasValue)
                                    {
                                        <dt class="col-sm-5">Started:</dt>
                                        <dd class="col-sm-7">@deployment.runStartedAt.Value.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                                    }

                                    @if (!string.IsNullOrEmpty(deployment.FormattedDuration))
                                    {
                                        <dt class="col-sm-5">Duration:</dt>
                                        <dd class="col-sm-7">
                                            <i class="oi oi-clock me-1"></i>
                                            @deployment.FormattedDuration
                                        </dd>
                                    }

                                    <dt class="col-sm-5">Event Type:</dt>
                                    <dd class="col-sm-7">@deployment.eventType</dd>

                                    <dt class="col-sm-5">Trigger:</dt>
                                    <dd class="col-sm-7">
                                        <span class="badge bg-secondary">@deployment.TriggerType</span>
                                    </dd>
                                </dl>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(deployment.note))
                        {
                            <div class="mt-3">
                                <h6>Notes:</h6>
                                <div class="alert alert-light">
                                    <i class="oi oi-note me-2"></i>
                                    @deployment.note
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Approval Workflow (if applicable) -->
                @if (deployment.HasApprovalWorkflow)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="oi oi-shield me-2"></i>
                                Approval Workflow
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @if (!string.IsNullOrEmpty(deployment.requestor))
                                {
                                    <div class="col-md-6 mb-3">
                                        <strong>Requestor:</strong>
                                        <span class="ms-2">
                                            <i class="oi oi-person me-1"></i>
                                            @deployment.requestor
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(deployment.reviewers))
                                {
                                    <div class="col-md-6 mb-3">
                                        <strong>Reviewers:</strong>
                                        <span class="ms-2">
                                            <i class="oi oi-people me-1"></i>
                                            @deployment.reviewers
                                        </span>
                                    </div>
                                }
                                @if (deployment.requestedAt.HasValue)
                                {
                                    <div class="col-md-6 mb-3">
                                        <strong>Requested At:</strong>
                                        <span class="ms-2">@deployment.requestedAt.Value.ToString("yyyy-MM-dd HH:mm:ss")</span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(deployment.action))
                                {
                                    <div class="col-md-6 mb-3">
                                        <strong>Action:</strong>
                                        <span class="badge bg-info ms-2">@deployment.action</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }

                <!-- Status History -->
                @if (!string.IsNullOrEmpty(deployment.statusHistory))
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="oi oi-clock me-2"></i>
                                Status History
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Status</th>
                                            <th>Updated At</th>
                                            <th>Description</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var status in ParseStatusHistory(deployment.statusHistory))
                                        {
                                            <tr>
                                                <td>
                                                    <span class="badge @GetStateClassForStatus(status.state)">@status.state</span>
                                                </td>
                                                <td>@status.updatedAt</td>
                                                <td>@status.description</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }

                <!-- Approval History -->
                @if (!string.IsNullOrEmpty(deployment.approvalHistory))
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="oi oi-shield me-2"></i>
                                Approval History
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Reviewer</th>
                                            <th>Action</th>
                                            <th>Date</th>
                                            <th>Comments</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var approval in ParseApprovalHistory(deployment.approvalHistory))
                                        {
                                            <tr>
                                                <td>
                                                    <i class="oi oi-person me-1"></i>
                                                    @approval.reviewer
                                                </td>
                                                <td>
                                                    <span class="badge @GetApprovalActionClass(approval.action)">@approval.action</span>
                                                </td>
                                                <td>@approval.date</td>
                                                <td>@approval.comments</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Right Column - Quick Actions & Metadata -->
            <div class="col-lg-4">
                <!-- Quick Actions -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="oi oi-dashboard me-2"></i>
                            Quick Actions
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            @if (!string.IsNullOrEmpty(deployment.WorkflowRunUrl))
                            {
                                <a href="@deployment.WorkflowRunUrl" target="_blank" class="btn btn-primary">
                                    <i class="oi oi-external-link me-2"></i>
                                    View Workflow Run
                                </a>
                            }
                            @if (!string.IsNullOrEmpty(deployment.workflowUrl))
                            {
                                <a href="@deployment.workflowUrl" target="_blank" class="btn btn-outline-primary">
                                    <i class="oi oi-code me-2"></i>
                                    View Workflow File
                                </a>
                            }
                        </div>
                    </div>
                </div>

                <!-- Metadata -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="oi oi-tag me-2"></i>
                            Metadata
                        </h6>
                    </div>
                    <div class="card-body">
                        <dl>
                            <dt>Partition Key:</dt>
                            <dd><code>@deployment.PartitionKey</code></dd>

                            <dt>Row Key:</dt>
                            <dd><code>@deployment.RowKey</code></dd>

                            @if (!string.IsNullOrEmpty(deployment.WorkflowRunIdDisplay) && deployment.WorkflowRunIdDisplay != "N/A")
                            {
                                <dt>Workflow Run ID:</dt>
                                <dd><code>@deployment.WorkflowRunIdDisplay</code></dd>
                            }

                            @if (!string.IsNullOrEmpty(deployment.workflowPath))
                            {
                                <dt>Workflow Path:</dt>
                                <dd><code>@deployment.workflowPath</code></dd>
                            }

                            <dt>Last Modified:</dt>
                            <dd>@deployment.Timestamp?.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <!-- Navigation -->
        <div class="row mt-4">
            <div class="col-12">
                <button class="btn btn-secondary" @onclick="NavigateBack">
                    <i class="oi oi-arrow-left me-2"></i>
                    Back to Deployments
                </button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string Repository { get; set; }
    [Parameter] public string DeploymentId { get; set; }

    private DeploymentState deployment;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDeployment();
    }

    private async Task LoadDeployment()
    {
        isLoading = true;
        try
        {
            deployment = await StorageService.GetDeploymentAsync(Repository, DeploymentId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading deployment: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private string GetStateClass(string statusCategory)
    {
        return statusCategory?.ToLower() switch
        {
            "success" => "bg-success",
            "failure" => "bg-danger",
            "pending" => "bg-warning",
            "in_progress" => "bg-info",
            "cancelled" => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    private string GetStateIcon(string statusCategory)
    {
        return statusCategory?.ToLower() switch
        {
            "success" => "check",
            "failure" => "x",
            "pending" => "clock",
            "in_progress" => "reload",
            "cancelled" => "ban",
            _ => "question-mark"
        };
    }

    private string GetStateClassForStatus(string status)
    {
        return status?.ToLower() switch
        {
            "success" or "completed" or "approved" => "bg-success",
            "failure" or "failed" or "rejected" => "bg-danger",
            "pending" or "waiting" or "queued" => "bg-warning",
            "in_progress" or "running" => "bg-info",
            "cancelled" or "canceled" => "bg-secondary",
            _ => "bg-light text-dark"
        };
    }

    private string GetApprovalActionClass(string action)
    {
        return action?.ToLower() switch
        {
            "approved" => "bg-success",
            "rejected" or "denied" => "bg-danger",
            "pending" or "waiting" => "bg-warning",
            _ => "bg-info"
        };
    }

    private List<StatusHistoryItem> ParseStatusHistory(string statusHistoryJson)
    {
        var result = new List<StatusHistoryItem>();
        if (string.IsNullOrEmpty(statusHistoryJson))
            return result;

        try
        {
            var items = JsonSerializer.Deserialize<List<StatusHistoryItem>>(statusHistoryJson);
            return items ?? result;
        }
        catch
        {
            return result;
        }
    }

    private List<ApprovalHistoryItem> ParseApprovalHistory(string approvalHistoryJson)
    {
        var result = new List<ApprovalHistoryItem>();
        if (string.IsNullOrEmpty(approvalHistoryJson))
            return result;

        try
        {
            var items = JsonSerializer.Deserialize<List<ApprovalHistoryItem>>(approvalHistoryJson);
            return items ?? result;
        }
        catch
        {
            return result;
        }
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/deployments");
    }

    private class StatusHistoryItem
    {
        public string state { get; set; }
        public string description { get; set; }
        public string updatedAt { get; set; }
    }

    private class ApprovalHistoryItem
    {
        public string reviewer { get; set; }
        public string action { get; set; }
        public string date { get; set; }
        public string comments { get; set; }
    }
}