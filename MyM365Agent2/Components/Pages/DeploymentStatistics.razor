@using System.Linq
@using MyM365Agent2.Common.Models
@using MyM365Agent2.Services
@inject IAzureTableStorageService StorageService

<div class="row">
    @if (isLoading)
    {
        <div class="col-12 text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading statistics...</span>
            </div>
            <p class="mt-3 text-muted">Analyzing deployment data...</p>
        </div>
    }
    else
    {
        <!-- Total Deployments Card -->
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="card text-white bg-primary h-100 hover-scale">
                <div class="card-body d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6 class="card-title mb-0 text-uppercase fw-bold">Total</h6>
                            <i class="oi oi-layers" style="font-size: 1.5rem; opacity: 0.8;"></i>
                        </div>
                        <p class="card-text display-6 mb-2">@statistics["total"]</p>
                        <small style="color: rgba(255, 255, 255, 0.75);">
                            <i class="oi oi-graph me-1"></i>
                            All time deployments
                        </small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Success Rate Card -->
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="card text-white bg-success h-100 hover-scale">
                <div class="card-body d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6 class="card-title mb-0 text-uppercase fw-bold">Success Rate</h6>
                            <i class="oi oi-check" style="font-size: 1.5rem; opacity: 0.8;"></i>
                        </div>
                        <p class="card-text display-6 mb-2">
                            @(
                                statistics["total"] > 0
                                    ? $"{(statistics["success"] * 100.0 / statistics["total"]):0.#}%"
                                    : "0%"
                            )
                        </p>
                        <small style="color: rgba(255, 255, 255, 0.75);">
                            <i class="oi oi-thumb-up me-1"></i>
                            @statistics["success"] successful deployments
                        </small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Failed Deployments Card -->
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="card text-white bg-danger h-100 hover-scale">
                <div class="card-body d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6 class="card-title mb-0 text-uppercase fw-bold">Failed</h6>
                            <i class="oi oi-x" style="font-size: 1.5rem; opacity: 0.8;"></i>
                        </div>
                        <p class="card-text display-6 mb-2">@statistics["failure"]</p>
                        <small style="color: rgba(255, 255, 255, 0.75);">
                            <i class="oi oi-warning me-1"></i>
                            @(
                                statistics["total"] > 0
                                    ? $"{(statistics["failure"] * 100.0 / statistics["total"]):0.#}% failure rate"
                                    : "No failures recorded"
                            )
                        </small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending/In Progress Card -->
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="card text-white bg-warning h-100 hover-scale">
                <div class="card-body d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6 class="card-title mb-0 text-uppercase fw-bold">Active</h6>
                            <i class="oi oi-clock" style="font-size: 1.5rem; opacity: 0.8;"></i>
                        </div>
                        <p class="card-text display-6 mb-2">
                            @(statistics["pending"] + statistics["in_progress"] + statistics["pending_approval"])
                        </p>
                        <small style="color: rgba(255, 255, 255, 0.75);">
                            <i class="oi oi-reload me-1"></i>
                            @statistics["pending"] pending, @statistics["in_progress"] running
                            @if (statistics["pending_approval"] > 0)
                            {
                                <br />
                                <i class="oi oi-person me-1"></i>
                                @statistics["pending_approval"]<text> awaiting approval</text>

                            }
                        </small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Additional Statistics Row -->
        @if (statistics["cancelled"] > 0)
        {
            <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
                <div class="card text-white bg-secondary h-100 hover-scale">
                    <div class="card-body d-flex align-items-center">
                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6 class="card-title mb-0 text-uppercase fw-bold">Other</h6>
                                <i class="oi oi-ban" style="font-size: 1.5rem; opacity: 0.8;"></i>
                            </div>
                            <p class="card-text display-6 mb-2">@statistics["cancelled"]</p>
                            <small style="color: rgba(255, 255, 255, 0.75);">
                                <i class="oi oi-ban me-1"></i>
                                Cancelled deployments
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (statistics["pending_approval"] > 0)
        {
            <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
                <div class="card text-white bg-info h-100 hover-scale">
                    <div class="card-body d-flex align-items-center">
                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6 class="card-title mb-0 text-uppercase fw-bold">Approvals</h6>
                                <i class="oi oi-person" style="font-size: 1.5rem; opacity: 0.8;"></i>
                            </div>
                            <p class="card-text display-6 mb-2">@statistics["pending_approval"]</p>
                            <small style="color: rgba(255, 255, 255, 0.75);">
                                <i class="oi oi-shield me-1"></i>
                                Pending approvals
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@if (!isLoading && statistics["total"] > 0)
{
    <div class="row mt-4">
        <!-- Deployment Insights… (unchanged) -->
    </div>

    @if (environmentStats != null && environmentStats.Any())
    {
        <!-- Top Environments & Repos… (unchanged) -->
    }
}

<style>
    .border-end { border-right: 1px solid #e1dfdd; }
    .pe-3 { padding-right: 1rem; }
</style>

@code {
    private Dictionary<string,int> statistics = new();
    private Dictionary<string,Dictionary<string,int>> environmentStats = new();
    private Dictionary<string,Dictionary<string,int>> repositoryStats = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
        => await LoadStatistics();

    private async Task LoadStatistics()
    {
        isLoading = true;
        try
        {
            statistics      = await StorageService.GetDeploymentStatisticsAsync();
            environmentStats = await StorageService.GetEnvironmentStatisticsAsync();
            repositoryStats  = await StorageService.GetRepositoryStatisticsAsync();
        }
        catch
        {
            // Fallback to zeros
            statistics = new()
            {
                ["success"] = 0,
                ["failure"] = 0,
                ["pending"] = 0,
                ["in_progress"] = 0,
                ["cancelled"] = 0,
                ["pending_approval"] = 0,
                ["total"] = 0
            };
        }
        finally
        {
            isLoading = false;
        }
    }

    private int GetActiveDeployments()
        => statistics["pending"] + statistics["in_progress"] + statistics["pending_approval"];

    private double GetFailureRate()
        => statistics["total"] == 0
            ? 0
            : Math.Round(statistics["failure"] * 100.0 / statistics["total"], 1);

    private string GetHealthStatus()
    {
        if (statistics["total"] == 0) return "No Data";
        var successRate = statistics["success"] * 100.0 / statistics["total"];
        var failureRate = GetFailureRate();
        return (successRate, failureRate) switch
        {
            (>= 95, < 2)  => "Excellent",
            (>= 90, < 5)  => "Very Good",
            (>= 80, < 10) => "Good",
            (>= 70, < 15) => "Fair",
            (>= 50, < 25) => "Poor",
            _             => "Critical"
        };
    }

    private string GetHealthClass()
    {
        if (statistics["total"] == 0) return "text-muted";
        var successRate = statistics["success"] * 100.0 / statistics["total"];
        var failureRate = GetFailureRate();
        return (successRate, failureRate) switch
        {
            (>= 95, < 2)  => "text-success",
            (>= 90, < 5)  => "text-success",
            (>= 80, < 10) => "text-info",
            (>= 70, < 15) => "text-warning",
            (>= 50, < 25) => "text-warning",
            _             => "text-danger"
        };
    }
}
